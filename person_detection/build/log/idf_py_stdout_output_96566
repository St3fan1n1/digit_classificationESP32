[1/9] Performing build step for 'bootloader'
[1/1] cd /home/stefano/esp/projects_tf/person_detection/build/bootloader/esp-idf/esptool_py && /home/stefano/esp/idf-tools/python_env/idf5.4_py3.11_env/bin/python /home/stefano/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/stefano/esp/projects_tf/person_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x58a0 bytes. 0x2760 bytes (31%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building CXX object esp-idf/espressif__esp-tflite-micro/CMakeFiles/__idf_espressif__esp-tflite-micro.dir/tensorflow/lite/micro/kernels/esp_nn/conv.cc.obj
[5/9] Linking C static library esp-idf/espressif__esp-tflite-micro/libespressif__esp-tflite-micro.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable person_detection.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.dev3
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/stefano/esp/projects_tf/person_detection/build/person_detection.bin
[9/9] cd /home/stefano/esp/projects_tf/person_detection/build/esp-idf/esptool_py && /home/stefano/esp/idf-tools/python_env/idf5.4_py3.11_env/bin/python /home/stefano/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/stefano/esp/projects_tf/person_detection/build/partition_table/partition-table.bin /home/stefano/esp/projects_tf/person_detection/build/person_detection.bin
person_detection.bin binary size 0x7be20 bytes. Smallest app partition is 0x300000 bytes. 0x2841e0 bytes (84%) free.
